<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>